{"version":3,"sources":["images/shareIcon.svg","images/whiteHeartIcon.svg","images/blackHeartIcon.svg","context/drinksContext.js","context/recipesContext.js","components/Header/HeaderRadioButton.js","components/Loading/images/ezgif.com-gif-maker (4).gif","components/Loading/images/ezgif.com-gif-maker (1).gif","components/Loading/images/ezgif.com-gif-maker (2).gif","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/profileIcon.svg","images/searchIcon.svg","components/Header/SearchHeader.js","helpers/getURLtoFetch.js","components/Header/HeaderCardRecipe.js","components/Header/HeaderCardDrinks.js","images/text.gif","pages/Details/helper.js","components/Loading/index.js","pages/Details/index.js","pages/Details/RenderFood.js","pages/Details/RenderDrinks.js","components/Footer/Footer.js","components/Header/SearchButton.js","components/Header/Header.js","components/HorizontalCardDrinkList/index.js","pages/Drinks/index.js","pages/Explore/index.js","pages/ExploreFoods/index.js","pages/ExploreDrinks/index.js","pages/ExploreAreas/index.js","pages/ExploreIngredientsFoods/index.js","pages/ExploreIngredientsDrinks/index.js","components/HorizontalCardDrink/helper.js","components/HorizontalCardDrink/index.js","components/HorizontalCardFood/helper.js","components/HorizontalCardFood/index.js","pages/Favorites/index.js","components/HorizontalCardFoodList/index.js","pages/Foods/index.js","pages/Login/index.js","pages/Made/index.js","pages/Profile/index.js","pages/ProgressDrink/Helper.js","pages/ExploreDrinksArea/index.js","pages/index.js","pages/ProgressFood/index.js","pages/ProgressDrink/index.js","context/provider.js","components/ExplanationText/index.js","App.js","index.js"],"names":["module","exports","drinksContext","createContext","recipesContext","HeaderRadioButton","value","onChange","text","dataTest","className","htmlFor","id","type","checked","name","data-testid","onClick","SearchHeader","match","history","useState","radioIngredient","setRadioIngredient","radioName","setRadioName","radioFirstLetter","setRadioFirstLetter","radioSelected","setRadioSelected","inputValue","setInputValue","itens","setItens","useContext","searchedDrinks","setSearchedDrinks","searchedRecipes","setSearchedRecipes","useEffect","path","meals","drinks","length","slice","action","placeholder","e","target","URL","getURLtoFetch","fetch","then","results","json","items","global","alert","push","idMeal","idDrink","map","recipe","index","key","drink","radio","answer","HeaderCardRecipe","to","strMeal","src","strMealThumb","alt","HeaderCardDrink","strDrink","strDrinkThumb","verifyProgress","setState","chave","Object","prototype","hasOwnProperty","call","localStorage","recipes","JSON","parse","getItem","undefined","verifyFavorite","favoriteRecipes","find","rec","verifyLocalStorage","param","doneRecipes","shareButton","Copy","window","location","href","saveFavoriteLocalstorage","isFavorite","favoritas","indexFinal","obj","area","strArea","category","strCategory","alcoholicOrNot","strAlcoholic","image","splice","setItem","stringify","Loading","hamburgerLoading","textLoading","hamburgerJumping","Details","params","includes","setRecipe","loading","setLoading","recomendations","setRecomendations","disabled","setDisabled","done","setDone","progress","setProgress","copied","setCopied","favorite","setFavorite","useHistory","a","response","data","recomendationsFetch","recomendationsData","getData","helper","ingredients","quantity","keyIngredient","keyMeasure","style","height","BlackHeart","WhiteHeart","Share","ingredient","strInstructions","strYoutube","frameBorder","allow","title","onScroll","receita","hidden","inProgressRedirect","RenderFood","setDrink","measureKey","RenderDrink","Footer","explore","meal","SearchButton","handleActive","searchIcon","Header","search","active","setActive","profileIcon","defaultProps","HorizontalCardDrinkList","setFavoriteFoods","date","doneDate","tags","BASIC_URL","Drinks","stateDrinks","setDrinks","categories","setCategories","categorySelected","setCategorySelected","loadingCategory","setLoadingCategory","loadingDrinks","setLoadingDrinks","drinksIngredients","MAX_NUMBER_CATEGORIES","responseDrinks","array","arrayCategories","arrayCategoriesLimited","filter","__","fetchCategories","fetchDrinks","MAX_NUMBER_DRINKS","drinksLimited","fetchDrinksIngredients","drinksCorrect","pathname","substring","handleButtonCategory","handleButtonAll","MAX_NUMBER_FOODS","Explore","marginTop","ExploreFoods","ExploreDrinks","verify","transform","temp","ExploreAreas","areas","setAreas","foods","setFoods","url","getFoods","comida","redirecionar","aria-hidden","ExploreIngredientsFoods","setRecipesIngredients","ingredientes","setIngredientes","item","strIngredient","idIngredient","ExploreIngredientsDrinks","setDrinksIngredients","strIngredient1","RemoveFavorite","newFavoritas","HorizontalCardDrink","showMessage","setShowmessage","link","split","shareIcon","tag","tagIndex","HorizontalCardFood","Favorites","showFoods","setShowFoods","showDrinks","setShowDrinks","favoriteFoods","allRecipesWithIndex","foodsToSet","drinksToSet","food","HorizontalCardFoodList","Foods","recipesIngredients","loadingFood","setLoadingFood","responseMeals","fetchFoods","mealsLimited","fetchFoodsIngredients","mealsCorrect","Login","email","password","user","setUser","handleChange","prevState","mealsToken","cocktailsToken","canBeSubmitted","Made","allRecipes","Profile","clear","checkInput","currentIngredients","check","arrayLength","current","children","innerText","forEach","element","textDecoration","handleButton","completeIngredients","setButton","ExploreDrinksArea","ProgressFood","setMeal","button","setCurrentIngredients","useRef","getIngredientsMels","getDrink","ref","currentProgressRecipes","parentNode","findIndex","handleMeals","today","Date","getDate","getMonth","getFullYear","OBJmeal","strTags","allNewRecipes","ProgressDrink","cocktails","getIngredientsCocktails","handleCocktails","OBJdrink","Provider","setRecipes","recipesCategory","setRecipesCategory","recipesAreas","setRecipesAreas","drinksCategory","setDrinksCategory","drinksObject","recipesObject","ExplanationText","textImage","App","exact","component","Pages","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.aaf44d40.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","import { createContext } from 'react';\n\nconst drinksContext = createContext();\n\nexport default drinksContext;\n","import { createContext } from 'react';\n\nconst recipesContext = createContext();\n\nexport default recipesContext;\n","import React from 'react';\n\nimport propTypes from 'prop-types';\n\nfunction HeaderRadioButton({ value, onChange, text, dataTest, className }) {\n  return (\n    <label htmlFor={ text } className={ className }>\n      <input\n        id={ text }\n        type=\"radio\"\n        checked={ value }\n        className={ className }\n        name=\"radioSearch\"\n        data-testid={ dataTest }\n        onChange={ onChange }\n        onClick={ onChange }\n      />\n      {text}\n    </label>\n  );\n}\n\nHeaderRadioButton.propTypes = {\n  value: propTypes.bool.isRequired,\n  onChange: propTypes.func.isRequired,\n  text: propTypes.string.isRequired,\n  dataTest: propTypes.string.isRequired,\n  className: propTypes.string.isRequired,\n};\n\nexport default HeaderRadioButton;\n","module.exports = __webpack_public_path__ + \"static/media/ezgif.com-gif-maker (4).3f4c18be.gif\";","module.exports = __webpack_public_path__ + \"static/media/ezgif.com-gif-maker (1).955eca02.gif\";","module.exports = __webpack_public_path__ + \"static/media/ezgif.com-gif-maker (2).4e7c48ff.gif\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","import React, { useContext, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport HeaderRadioButton from './HeaderRadioButton';\nimport getURLtoFetch from '../../helpers/getURLtoFetch';\nimport drinksContext from '../../context/drinksContext';\nimport recipesContext from '../../context/recipesContext';\nimport HeaderCardRecipe from './HeaderCardRecipe';\nimport HeaderCardDrink from './HeaderCardDrinks';\n\nimport './searchHeader.css';\n\nfunction SearchHeader({ match, history }) {\n  const [radioIngredient, setRadioIngredient] = useState(false);\n  const [radioName, setRadioName] = useState(false);\n  const [radioFirstLetter, setRadioFirstLetter] = useState(false);\n  const [radioSelected, setRadioSelected] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const [itens, setItens] = useState([]);\n  const { searchedDrinks, setSearchedDrinks } = useContext(drinksContext);\n  const { searchedRecipes, setSearchedRecipes } = useContext(recipesContext);\n\n  const MAX_SHOW_NUMBER = 12;\n\n  const handleRadioIngredient = () => {\n    if (!radioIngredient) {\n      setRadioIngredient(true);\n      setRadioName(false);\n      setRadioFirstLetter(false);\n    }\n  };\n\n  const handleRadioName = () => {\n    if (!radioName) {\n      setRadioIngredient(false);\n      setRadioName(true);\n      setRadioFirstLetter(false);\n    }\n  };\n\n  const handleRadioFirstLetter = () => {\n    if (!radioFirstLetter) {\n      setRadioIngredient(false);\n      setRadioName(false);\n      setRadioFirstLetter(true);\n    }\n  };\n\n  const handleButtonClick = () => {\n    const URL = getURLtoFetch(match.path, radioSelected, inputValue);\n    fetch(URL).then((results) => results.json()).then((items) => {\n      setItens(items);\n      if ((match.path === '/comidas' && items.meals === null)\n      || (match.path === '/bebidas' && items.drinks === null)) {\n        global.alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n      } else if (match.path === '/comidas' && items.meals && items.meals.length === 1) {\n        history.push(`/comidas/${items.meals[0].idMeal}`);\n      } else if (match.path === '/bebidas' && items.drinks && items.drinks.length === 1) {\n        history.push(`/bebidas/${items.drinks[0].idDrink}`);\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (match.path === '/comidas' && itens.meals) { setSearchedRecipes(itens.meals); }\n    if (match.path === '/bebidas' && itens.drinks) {\n      setSearchedDrinks(itens.drinks);\n    }\n  }, [itens, match.path, setSearchedDrinks, setSearchedRecipes]);\n\n  useEffect(() => {\n    function selectRadio() {\n      if (radioIngredient) { setRadioSelected('radioIngredient'); }\n      if (radioName) { setRadioSelected('radioName'); }\n      if (radioFirstLetter) { setRadioSelected('radioFirstLetter'); }\n    } selectRadio();\n  }, [radioFirstLetter, radioName, radioIngredient]);\n\n  useEffect(() => {\n    function fixDrinks() {\n      if (searchedDrinks && searchedDrinks.length > MAX_SHOW_NUMBER\n         && match.path === '/bebidas') {\n        setSearchedRecipes([]);\n        setSearchedDrinks(searchedDrinks.slice(0, MAX_SHOW_NUMBER));\n      }\n    } fixDrinks();\n  }, [match.path, searchedDrinks, setSearchedDrinks, setSearchedRecipes]);\n\n  useEffect(() => {\n    function fixRecipes() {\n      if (searchedRecipes && searchedRecipes.length > MAX_SHOW_NUMBER\n         && match.path === '/comidas') {\n        setSearchedDrinks([]);\n        setSearchedRecipes(searchedRecipes.slice(0, MAX_SHOW_NUMBER));\n      }\n    } fixRecipes();\n  }, [match.path, searchedRecipes, setSearchedDrinks, setSearchedRecipes]);\n\n  return (\n    <section className=\"search-header-container\">\n\n      <form action=\"GET\" className=\"form-search-header\">\n        <div className=\"search-input-div\">\n          <input\n            type=\"text\"\n            data-testid=\"search-input\"\n            className=\"search-input\"\n            value={ inputValue }\n            placeholder=\"Insira um valor\"\n            onChange={ (e) => setInputValue(e.target.value) }\n          />\n          <button\n            type=\"button\"\n            onClick={ handleButtonClick }\n            data-testid=\"exec-search-btn\"\n            className=\"exec-search-btn\"\n          >\n            Busca\n          </button>\n        </div>\n        <div className=\"search-radio-div\">\n          <HeaderRadioButton\n            value={ radioIngredient }\n            text=\"Ingredientes\"\n            onChange={ handleRadioIngredient }\n            dataTest=\"ingredient-search-radio\"\n            className=\"first-letter-search-radio\"\n          />\n          <HeaderRadioButton\n            value={ radioName }\n            text=\"Nome\"\n            onChange={ handleRadioName }\n            dataTest=\"name-search-radio\"\n            className=\"first-letter-search-radio\"\n          />\n          <HeaderRadioButton\n            value={ radioFirstLetter }\n            text=\"Primeira Letra\"\n            onChange={ handleRadioFirstLetter }\n            dataTest=\"first-letter-search-radio\"\n            className=\"first-letter-search-radio\"\n          />\n        </div>\n        {/* <div className=\"search-button-div\">\n          <button\n            type=\"button\"\n            onClick={ handleButtonClick }\n            data-testid=\"exec-search-btn\"\n            className=\"exec-search-btn\"\n          >\n            Busca\n          </button>\n        </div> */}\n      </form>\n\n      {match.path === '/comidas'\n      && (\n        <div\n          className=\"recipes-cards-container\"\n        >\n          {searchedRecipes.map((recipe, index) => (<HeaderCardRecipe\n            recipe={ recipe }\n            index={ index }\n            key={ recipe.idMeal }\n          />))}\n        </div>)}\n\n      {match.path === '/bebidas'\n      && (\n        <div\n          className=\"drinks-cards-container\"\n        >\n          {searchedDrinks.map((drink, index) => (<HeaderCardDrink\n            drink={ drink }\n            index={ index }\n            key={ drink.idDrink }\n          />))}\n        </div>)}\n\n    </section>\n  );\n}\n\nSearchHeader.propTypes = {\n  match: propTypes.shape({\n    path: propTypes.string,\n  }).isRequired,\n  history: propTypes.shape({\n    push: propTypes.func }).isRequired,\n};\n\nexport default SearchHeader;\n","const getURLtoFetch = (type, radio, inputValue = '') => {\n  let answer;\n\n  if (radio === 'radioFirstLetter' && inputValue.length > 1) {\n    global.alert('Sua busca deve conter somente 1 (um) caracter');\n  } else if (type === '/comidas') {\n    if (radio === 'radioFirstLetter' && inputValue.length === 1) {\n      answer = `https://www.themealdb.com/api/json/v1/1/search.php?f=${inputValue}`;\n    } else if (radio === 'radioName') {\n      answer = `https://www.themealdb.com/api/json/v1/1/search.php?s=${inputValue}`;\n    } else if (radio === 'radioIngredient') {\n      answer = `https://www.themealdb.com/api/json/v1/1/filter.php?i=${inputValue}`;\n    }\n  } else if (type === '/bebidas') {\n    if (radio === 'radioFirstLetter' && inputValue.length === 1) {\n      answer = `https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${inputValue}`;\n    } else if (radio === 'radioName') {\n      answer = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${inputValue}`;\n    } else if (radio === 'radioIngredient') {\n      answer = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${inputValue}`;\n    }\n  }\n  return answer;\n};\n\nexport default getURLtoFetch;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction HeaderCardRecipe({ recipe, index }) {\n  return (\n    <div\n      data-testid={ `${index}-recipe-card` }\n      className=\"header-card\"\n    >\n      <Link to={ `/comidas/${recipe.idMeal}` } className=\"title-text\">\n        <h2\n          data-testid={ `${index}-card-name` }\n        >\n          {recipe.strMeal}\n\n        </h2>\n        <img\n          src={ recipe.strMealThumb }\n          alt={ recipe.strMeal }\n          data-testid={ `${index}-card-img` }\n          className=\"header-card-image\"\n        />\n      </Link>\n    </div>\n\n  );\n}\n\nHeaderCardRecipe.propTypes = {\n  recipe: propTypes.shape({\n    strMealThumb: propTypes.string,\n    strMeal: propTypes.string,\n    idMeal: propTypes.string,\n  }).isRequired,\n  index: propTypes.number.isRequired,\n};\n\nexport default HeaderCardRecipe;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction HeaderCardDrink({ drink, index }) {\n  return (\n    <div\n      data-testid={ `${index}-recipe-card` }\n      className=\"header-card\"\n    >\n      <Link to={ `/bebidas/${drink.idDrink}` } className=\"title-text\">\n        <h2 data-testid={ `${index}-card-name` }>{drink.strDrink}</h2>\n        <img\n          src={ drink.strDrinkThumb }\n          alt={ drink.strDrink }\n          data-testid={ `${index}-card-img` }\n          className=\"header-card-image\"\n        />\n      </Link>\n    </div>\n\n  );\n}\n\nHeaderCardDrink.propTypes = {\n  drink: propTypes.shape({\n    strDrinkThumb: propTypes.string,\n    strDrink: propTypes.string,\n    idDrink: propTypes.string,\n  }).isRequired,\n  index: propTypes.number.isRequired,\n};\n\nexport default HeaderCardDrink;\n","module.exports = __webpack_public_path__ + \"static/media/text.ba560aba.gif\";","import Copy from 'clipboard-copy';\n\nfunction verifyProgress(id, setState, chave) {\n  if (Object.prototype.hasOwnProperty.call(localStorage, 'inProgressRecipes')) {\n    const recipes = JSON.parse(localStorage.getItem('inProgressRecipes'))[chave];\n    if (recipes && recipes[id] !== undefined) {\n      setState(true);\n    }\n  }\n}\n\nfunction verifyFavorite(id, setState) {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (favoriteRecipes) {\n    const isFav = favoriteRecipes.find((rec) => rec.id === id);\n    if (isFav) {\n      setState(true);\n    }\n  }\n}\n\nfunction verifyLocalStorage(param, id) {\n  const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n\n  if (doneRecipes) {\n    const recipe = doneRecipes.find((rec) => rec.id === id);\n    if (recipe) {\n      param(true);\n    }\n  }\n}\n\nfunction shareButton(setState) {\n  Copy(window.location.href);\n  setState(true);\n}\n\nfunction saveFavoriteLocalstorage(recipe, isFavorite, setState, type) {\n  let favoritas = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  let indexFinal = null;\n  if (favoritas) {\n    for (let index = 0; index < favoritas.length; index += 1) {\n      if (favoritas[index].id === recipe[type]) {\n        indexFinal = index;\n      }\n    }\n  } else {\n    favoritas = [];\n  }\n  const obj = {\n    id: recipe[type],\n    type: type === 'idMeal' ? 'comida' : 'bebida',\n    area: type === 'idMeal' ? recipe.strArea : '',\n    category: recipe.strCategory,\n    alcoholicOrNot: type === 'idMeal' ? '' : recipe.strAlcoholic,\n    name: recipe[type === 'idMeal' ? 'strMeal' : 'strDrink'],\n    image: recipe[type === 'idMeal' ? 'strMealThumb' : 'strDrinkThumb'],\n  };\n  if (isFavorite) {\n    favoritas.splice(indexFinal, 1);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoritas));\n    setState(!isFavorite);\n  } else {\n    favoritas.push(obj);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoritas));\n    setState(!isFavorite);\n  }\n}\n\nexport default {\n  verifyProgress,\n  verifyFavorite,\n  verifyLocalStorage,\n  shareButton,\n  saveFavoriteLocalstorage,\n};\n","import React from 'react';\nimport hamburgerLoading from './images/ezgif.com-gif-maker (4).gif';\nimport textLoading from './images/ezgif.com-gif-maker (1).gif';\nimport hamburgerJumping from './images/ezgif.com-gif-maker (2).gif';\n\nimport './loadingStyles.css';\n\nfunction Loading() {\n  return (\n    <main className=\"loading-screen-container\">\n      <div className=\"loading-images-container\">\n        <img\n          src={ hamburgerLoading }\n          alt=\"hamburger-loading\"\n          className=\"hamburger-loading\"\n        />\n        <img\n          src={ textLoading }\n          alt=\"text-loading\"\n          className=\"text-loading\"\n        />\n      </div>\n      <img\n        src={ hamburgerJumping }\n        alt=\"hamburger-jumping\"\n        className=\"hamburger-jumping\"\n      />\n    </main>\n  );\n}\nexport default Loading;\n","import RenderDrink from './RenderDrinks';\nimport RenderFood from './RenderFood';\n\nfunction Details({ match: { params: { id }, path } }) {\n  if (path.includes('comidas')) {\n    return RenderFood(id);\n  }\n  return RenderDrink(id);\n}\n\nexport default Details;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport helper from './helper';\nimport '../../styles/Global.css';\n\nimport './style.css';\nimport WhiteHeart from '../../images/whiteHeartIcon.svg';\nimport BlackHeart from '../../images/blackHeartIcon.svg';\nimport Share from '../../images/shareIcon.svg';\nimport Loading from '../../components/Loading';\n\nfunction inProgressRedirect(history, id) {\n  history.push(`/comidas/${id}/in-progress`);\n}\n\nexport default function RenderFood(id) {\n  const [recipe, setRecipe] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [recomendations, setRecomendations] = useState([]);\n  const [disabled, setDisabled] = useState(true);\n  const [done, setDone] = useState(false);\n  const [progress, setProgress] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [favorite, setFavorite] = useState(false);\n  const history = useHistory();\n\n  const initial = 6;\n  const maxArr = 19;\n\n  useEffect(() => {\n    async function getData() {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const data = await response.json();\n      setRecipe(data.meals[0]);\n\n      const recomendationsFetch = await fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n      const recomendationsData = await recomendationsFetch.json();\n      recomendationsData.drinks.splice(initial, maxArr);\n      setRecomendations(recomendationsData.drinks);\n\n      setLoading(false);\n    }\n    getData();\n    helper.verifyLocalStorage(setDone, id);\n    helper.verifyProgress(id, setProgress, 'meals');\n    helper.verifyFavorite(id, setFavorite);\n  }, [id]); // teste\n\n  if (loading) {\n    return <Loading />;\n  }\n  const ingredients = [];\n  const quantity = [];\n  const max = 20;\n  for (let index = 1; index <= max; index += 1) {\n    const keyIngredient = `strIngredient${index}`;\n    const keyMeasure = `strMeasure${index}`;\n\n    if (recipe[keyIngredient] !== '') {\n      ingredients.push(recipe[keyIngredient]);\n    }\n    if (recipe[keyMeasure] !== '') {\n      quantity.push(recipe[keyMeasure]);\n    }\n  }\n  const youtube = 32;\n  return (\n    <div className=\"container\">\n      <img\n        className=\"details-img\"\n        src={ recipe.strMealThumb }\n        alt=\"thumb\"\n        data-testid=\"recipe-photo\"\n        style={ { height: '150px' } }\n      />\n      <div className=\"container-details\">\n        <div className=\"title-style\">\n          <div>\n            <h2\n              data-testid=\"recipe-title\"\n            >\n              {recipe.strMeal}\n            </h2>\n            <h4\n              data-testid=\"recipe-category\"\n            >\n              { recipe.strCategory }\n            </h4>\n          </div>\n          <div className=\"icon-style\">\n            <input\n              type=\"image\"\n              src={ favorite ? BlackHeart : WhiteHeart }\n              data-testid=\"favorite-btn\"\n              alt=\"Favorite\"\n              onClick={\n                () => helper.saveFavoriteLocalstorage(recipe,\n                  favorite, setFavorite, 'idMeal')\n              }\n            />\n            <input\n              type=\"image\"\n              alt=\"share\"\n              src={ Share }\n              data-testid=\"share-btn\"\n              onClick={ () => helper.shareButton(setCopied) }\n            />\n            {\n              copied\n                && 'Link copiado!'\n            }\n          </div>\n        </div>\n        <h3>Ingredients</h3>\n        <div className=\"ing-style\">\n          {\n            ingredients.map(\n              (ingredient, index) => (\n                <p\n                  key={ index }\n                  data-testid={ `${index}-ingredient-name-and-measure` }\n                >\n                  { `${ingredient} ${quantity[index] ? quantity[index] : ''}` }\n                </p>\n              ),\n            )\n          }\n        </div>\n        <h3>Instructions</h3>\n        <div className=\"inst-style\">\n          <p\n            data-testid=\"instructions\"\n          >\n            { recipe.strInstructions }\n          </p>\n        </div>\n        <iframe\n          src={ `https://www.youtube.com/embed/${recipe.strYoutube.slice(youtube)}` }\n          frameBorder=\"0\"\n          allow=\"autoplay; encrypted-media\"\n          title=\"video\"\n          data-testid=\"video\"\n        />\n        <div className=\"recomendationsArea\" onScroll={ () => setDisabled(false) }>\n          {\n            recomendations.map(\n              (receita, index) => (\n                <div\n                  key={ index }\n                  data-testid={ `${index}-recomendation-card` }\n                  className=\"card\"\n                  hidden={ index > 1 ? disabled : false }\n                >\n                  <h1\n                    data-testid={ `${index}-recomendation-title` }\n                  >\n                    { receita.strDrink }\n                  </h1>\n                </div>\n              ),\n            )\n          }\n        </div>\n        <button\n          type=\"button\"\n          data-testid=\"start-recipe-btn\"\n          className=\"startRecipe\"\n          disabled={ done }\n          onClick={ () => inProgressRedirect(history, id) }\n        >\n          {\n            progress\n              ? 'Continuar Receita'\n              : 'Iniciar'\n          }\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './style.css';\nimport helper from './helper';\n\nimport WhiteHeart from '../../images/whiteHeartIcon.svg';\nimport BlackHeart from '../../images/blackHeartIcon.svg';\nimport Share from '../../images/shareIcon.svg';\nimport Loading from '../../components/Loading';\n\nfunction inProgressRedirect(history, id) {\n  history.push(`/bebidas/${id}/in-progress`);\n}\n\nexport default function RenderDrink(id) {\n  const [drink, setDrink] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [recomendations, setRecomendations] = useState([]);\n  const [disabled, setDisabled] = useState(true);\n  const [done, setDone] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [progress, setProgress] = useState(false);\n  const [favorite, setFavorite] = useState(false);\n  const history = useHistory();\n  const initial = 6;\n  const maxArr = 19;\n\n  useEffect(() => {\n    async function getData() {\n      const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const data = await response.json();\n      setDrink(data.drinks[0]);\n\n      const recomendationsFetch = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n      const recomendationsData = await recomendationsFetch.json();\n      recomendationsData.meals.splice(initial, maxArr);\n      setRecomendations(recomendationsData.meals);\n\n      setLoading(false);\n    }\n    getData();\n    helper.verifyLocalStorage(setDone, id);\n    helper.verifyProgress(id, setProgress, 'cocktails');\n    helper.verifyFavorite(id, setFavorite);\n  }, [id]);\n\n  if (loading) {\n    return <Loading />;\n  }\n  const ingredients = [];\n  const quantity = [];\n  const max = 20;\n  for (let index = 1; index <= max; index += 1) {\n    const key = `strIngredient${index}`;\n    const measureKey = `strMeasure${index}`;\n    if (drink[key]) {\n      ingredients.push(drink[key]);\n    }\n    if (drink[measureKey]) {\n      quantity.push(drink[measureKey]);\n    }\n  }\n  return (\n    <div className=\"container\">\n      <img\n        className=\"details-img\"\n        src={ drink.strDrinkThumb }\n        alt=\"thumb\"\n        data-testid=\"recipe-photo\"\n        style={ { height: '150px' } }\n      />\n      <div className=\"container-details\">\n        <div className=\"title-style\">\n          <div>\n            <h2\n              data-testid=\"recipe-title\"\n            >\n              {drink.strDrink}\n            </h2>\n            <h3\n              data-testid=\"recipe-category\"\n            >\n              { drink.strAlcoholic }\n            </h3>\n          </div>\n          <div className=\"icon-style\">\n            <input\n              type=\"image\"\n              src={ favorite ? BlackHeart : WhiteHeart }\n              data-testid=\"favorite-btn\"\n              alt=\"Favorite\"\n              onClick={\n                () => helper.saveFavoriteLocalstorage(drink,\n                  favorite, setFavorite, 'idDrink')\n              }\n            />\n            <input\n              type=\"image\"\n              alt=\"share\"\n              src={ Share }\n              data-testid=\"share-btn\"\n              onClick={ () => helper.shareButton(setCopied) }\n            />\n            {\n              copied\n              && 'Link copiado!'\n            }\n          </div>\n        </div>\n        <h3>Ingredients</h3>\n        <div className=\"ing-style\">\n          {\n            ingredients.map(\n              (ingredient, index) => (\n                <p\n                  key={ index }\n                  data-testid={ `${index}-ingredient-name-and-measure` }\n                >\n                  { `${ingredient} ${quantity[index]}` }\n                </p>\n              ),\n            )\n          }\n        </div>\n        <h3>Instructions</h3>\n        <div className=\"inst-style\">\n          <p\n            data-testid=\"instructions\"\n          >\n            { drink.strInstructions }\n          </p>\n        </div>\n        {/* <div className=\"recomendationsArea\" onScroll={ () => setDisabled(false) }>\n          {\n            recomendations.map(\n              (drinkk, index) => (\n                <div\n                  key={ index }\n                  data-testid={ `${index}-recomendation-card` }\n                  className=\"card\"\n                  hidden={ index > 1 ? disabled : false }\n                >\n                  <h1\n                    data-testid={ `${index}-recomendation-title` }\n                  >\n                    { drinkk.strMeal }\n                  </h1>\n                </div>\n              ),\n            )\n          }\n        </div> */}\n        <button\n          type=\"button\"\n          data-testid=\"start-recipe-btn\"\n          className=\"startRecipe\"\n          disabled={ done }\n          onClick={ () => inProgressRedirect(history, id) }\n        >\n          {\n            progress\n              ? 'Continuar Receita'\n              : 'Iniciar'\n          }\n        </button>\n\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './footer.css';\n\nimport drink from '../../images/drinkIcon.svg';\nimport explore from '../../images/exploreIcon.svg';\nimport meal from '../../images/mealIcon.svg';\n\nexport default function Footer() {\n  return (\n    <div data-testid=\"footer\" className=\"footer\">\n      <Link to=\"/bebidas\">\n        <img data-testid=\"drinks-bottom-btn\" className=\"icon\" src={ drink } alt=\"\" />\n      </Link>\n      <Link to=\"/explorar\">\n        <img data-testid=\"explore-bottom-btn\" className=\"icon\" src={ explore } alt=\"\" />\n      </Link>\n      <Link to=\"/comidas\">\n        <img data-testid=\"food-bottom-btn\" className=\"icon\" src={ meal } alt=\"\" />\n      </Link>\n    </div>\n  );\n}\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nimport searchIcon from '../../images/searchIcon.svg';\n\nfunction SearchButton({ handleActive }) {\n  return (\n    <div className=\"button-icon\">\n      <input\n        type=\"image\"\n        alt=\"Search Button\"\n        className=\"search-button icon\"\n        data-testid=\"search-top-btn\"\n        src={ searchIcon }\n        onClick={ handleActive }\n      />\n    </div>\n  );\n}\n\nSearchButton.propTypes = {\n  handleActive: propTypes.func.isRequired,\n};\n\nexport default SearchButton;\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport './header.css';\n\nimport profileIcon from '../../images/profileIcon.svg';\nimport SearchButton from './SearchButton';\nimport SearchHeader from './SearchHeader';\n\nfunction Header({ title, search, match, history }) {\n  const [active, setActive] = useState(false);\n\n  const handleActive = () => {\n    setActive(!active);\n  };\n\n  return (\n    <>\n      <div className=\"header\">\n        <Link to=\"/perfil\">\n          <img\n            data-testid=\"profile-top-btn\"\n            src={ profileIcon }\n            className=\"icon\"\n            alt=\"Profile Icon\"\n          />\n        </Link>\n        <h1 data-testid=\"page-title\">{title}</h1>\n        {\n          search && <SearchButton handleActive={ handleActive } />\n        }\n      </div>\n      <div className={ active ? 'search-header active' : 'search-header' }>\n        {\n          active && <SearchHeader match={ match } history={ history } />\n        }\n      </div>\n    </>\n  );\n}\n\nHeader.propTypes = {\n  title: propTypes.string.isRequired,\n  search: propTypes.bool,\n  match: propTypes.shape({\n    path: propTypes.string,\n  }).isRequired,\n  history: propTypes.shape({\n    push: propTypes.func }).isRequired,\n};\n\nHeader.defaultProps = {\n  search: false,\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Copy from 'clipboard-copy';\n\nimport RemoveFavorite from './helper';\n\nimport WhiteHeart from '../../images/whiteHeartIcon.svg';\nimport BlackHeart from '../../images/blackHeartIcon.svg';\nimport shareIcon from '../../images/shareIcon.svg';\n\nimport './styles.css';\n\nfunction HorizontalCardDrinkList({ recipe, index, isFavorite, setFavoriteFoods }) {\n  const { image, category, name, doneDate: date, id, type, tags } = recipe;\n\n  const [showMessage, setShowmessage] = useState(false);\n  const [favorite, setFavorite] = useState(true);\n\n  const handleClick = () => {\n    const link = `http://${window.location.href.split('/')[2]}/${type}s/${id}`;\n    Copy(link);\n    setShowmessage(true);\n  };\n\n  const handleFavorite = () => {\n    RemoveFavorite(recipe, type, isFavorite);\n    setFavorite(!favorite);\n    setFavoriteFoods(JSON.parse(localStorage.favoriteRecipes));\n  };\n  return (\n    <section className=\"done-card\" data-testid={ `${index}-recipe-card` }>\n      <Link to={ `/${type}s/${id}` }>\n        <h2 data-testid={ `${index}-card-name` }>{name}</h2>\n      </Link>\n      <Link to={ `/${type}s/${id}` }>\n        <img src={ image } alt=\"recipe\" data-testid={ `${index}-card-img` } />\n      </Link>\n      {category && <p data-testid={ `${index}-card-top-text` }>{ `${category}`}</p>}\n      {date && <p data-testid={ `${index}-card-done-date` }>{date}</p>}\n      {/* <button\n        type=\"button\"\n        onClick={ handleClick }\n        data-testid={ `${index}-card-share-btn` }\n        src={ shareIcon }\n      >\n        <img src={ shareIcon } alt=\"\" />\n      </button>\n      {showMessage && <p>Link copiado!</p>}\n      {tags && tags.map((tag, tagIndex) => (\n        <p\n          key={ tagIndex }\n          data-testid={ `${index}-${tag}-card-tag` }\n        >\n          {tag}\n        </p>))}\n      {\n        isFavorite && <input\n          type=\"image\"\n          src={ favorite ? BlackHeart : WhiteHeart }\n          data-testid={ `${index}-card-favorite-btn` }\n          alt=\"Favorite\"\n          onClick={ handleFavorite }\n        />\n      } */}\n    </section>\n  );\n}\n\nHorizontalCardDrinkList.propTypes = {\n  recipe: propTypes.shape({\n    image: propTypes.string,\n    category: propTypes.string,\n    name: propTypes.string,\n    doneDate: propTypes.string,\n    type: propTypes.string,\n    id: propTypes.string,\n    tags: propTypes.arrayOf(propTypes.string),\n    area: propTypes.string,\n  }).isRequired,\n  index: propTypes.number.isRequired,\n  isFavorite: propTypes.bool,\n  setFavoriteFoods: propTypes.func,\n};\n\nHorizontalCardDrinkList.defaultProps = {\n  isFavorite: false,\n  setFavoriteFoods: () => {},\n};\n\nexport default HorizontalCardDrinkList;\n","import React, { useContext, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\n\nimport './styles.css';\n\nimport Footer from '../../components/Footer/Footer';\nimport Header from '../../components/Header/Header';\nimport HorizontalCardDrinkList from '../../components/HorizontalCardDrinkList';\nimport drinksContext from '../../context/drinksContext';\nimport Loading from '../../components/Loading';\n\nconst BASIC_URL = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n\nfunction Drinks({ match, history }) {\n  const [stateDrinks, setDrinks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [categorySelected, setCategorySelected] = useState('all');\n  const [loadingCategory, setLoadingCategory] = useState(false);\n  const [loadingDrinks, setLoadingDrinks] = useState(false);\n  const { drinksIngredients } = useContext(drinksContext);\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      setLoadingCategory(true);\n      const MAX_NUMBER_CATEGORIES = 5;\n      const responseDrinks = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list');\n      const array = await responseDrinks.json();\n      const { drinks } = array;\n      const arrayCategories = drinks.map((drink) => drink.strCategory);\n      const arrayCategoriesLimited = arrayCategories\n        .filter((__, index) => index < MAX_NUMBER_CATEGORIES);\n      await setCategories(arrayCategoriesLimited);\n      setLoadingCategory(false);\n    };\n\n    fetchCategories();\n  }, []);\n\n  useEffect(() => {\n    const fetchDrinks = async () => {\n      setLoadingDrinks(true);\n      const MAX_NUMBER_DRINKS = 12;\n      const responseDrinks = await fetch(BASIC_URL);\n      const array = await responseDrinks.json();\n      const { drinks } = array;\n      const drinksLimited = drinks\n        .filter((__, index) => index < MAX_NUMBER_DRINKS);\n      await setDrinks(drinksLimited);\n      setLoadingDrinks(false);\n    };\n\n    const fetchDrinksIngredients = async () => {\n      const MAX_NUMBER_DRINKS = 12;\n      const responseDrinks = await\n      fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${drinksIngredients}`);\n      const array = await responseDrinks.json();\n      const { drinks } = array;\n      const drinksLimited = drinks\n        .filter((__, index) => index < MAX_NUMBER_DRINKS);\n      setDrinks(drinksLimited);\n    };\n\n    if (drinksIngredients) { fetchDrinksIngredients(); } else { fetchDrinks(); }\n  }, [drinksIngredients]);\n\n  const drinksCorrect = stateDrinks.map((drink) => ({\n    image: drink.strDrinkThumb,\n    category: drink.strCategory,\n    name: drink.strDrink,\n    area: drink.strArea,\n    id: drink.idDrink,\n    type: history.location.pathname.substring(1, history.location.pathname.length - 1)\n    ,\n  }));\n\n  const handleButtonCategory = async (category) => {\n    if (categorySelected !== category) {\n      const MAX_NUMBER_DRINKS = 12;\n      const responseDrinks = await fetch(\n        `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`,\n      );\n      const array = await responseDrinks.json();\n      const { drinks } = array;\n      const drinksLimited = drinks\n        .filter((__, index) => index < MAX_NUMBER_DRINKS);\n      setDrinks(drinksLimited);\n      setCategorySelected(category);\n    } else {\n      const MAX_NUMBER_DRINKS = 12;\n      const responseDrinks = await fetch(BASIC_URL);\n      const array = await responseDrinks.json();\n      const { drinks } = array;\n      const drinksLimited = drinks\n        .filter((__, index) => index < MAX_NUMBER_DRINKS);\n      setDrinks(drinksLimited);\n      setCategorySelected('all');\n    }\n  };\n\n  const handleButtonAll = async () => {\n    const MAX_NUMBER_FOODS = 12;\n    const responseDrinks = await fetch(BASIC_URL);\n    const array = await responseDrinks.json();\n    const { drinks } = array;\n    const drinksLimited = drinks\n      .filter((__, index) => index < MAX_NUMBER_FOODS);\n    setDrinks(drinksLimited);\n    setCategorySelected('all');\n  };\n\n  return (\n    (!loadingCategory && !loadingDrinks) ? (\n      <div className=\"drinks\">\n        <Header title=\"Bebidas\" search match={ match } history={ history } />\n\n        <div className=\"recipes-buttons-container\">\n\n          <button\n            data-testid=\"All-category-filter\"\n            type=\"button\"\n            className=\"recipes-buttons\"\n            onClick={ () => handleButtonAll() }\n          >\n            All\n          </button>\n\n          {categories\n            ? (\n              categories.map((category, index) => (\n                <button\n                  key={ index }\n                  className=\"recipes-buttons\"\n                  data-testid={ `${category}-category-filter` }\n                  type=\"button\"\n                  onClick={ () => handleButtonCategory(category) }\n                >\n                  {category}\n                </button>)))\n            : <p>Loading...</p>}\n\n        </div>\n\n        <div className=\"recipes-cards-container\">\n\n          {stateDrinks ? drinksCorrect.map((drink, index) => (\n\n            <HorizontalCardDrinkList\n              recipe={ drink }\n              index={ index }\n              history={ history }\n              key={ index }\n            />\n          ))\n            : <p>Loading...</p>}\n\n        </div>\n\n        <Footer />\n      </div>)\n      : <Loading />\n  );\n}\n\nDrinks.propTypes = {\n  match: propTypes.shape({\n    path: propTypes.string,\n  }).isRequired,\n  history: propTypes.shape({\n    push: propTypes.func,\n    location: propTypes.shape({\n      pathname: propTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Drinks;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Footer from '../../components/Footer/Footer';\nimport Header from '../../components/Header/Header';\n\nfunction Explore() {\n  const history = useHistory();\n  return (\n    <div className=\"explore application-container\">\n      <Header title=\"Explorar\" />\n      <button\n        type=\"button\"\n        data-testid=\"explore-food\"\n        onClick={ () => history.push('/explorar/comidas') }\n        style={ { marginTop: '50px' } }\n        className=\"selecting-button\"\n      >\n        Explorar Comidas\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"explore-drinks\"\n        onClick={ () => history.push('/explorar/bebidas') }\n        style={ { marginTop: '50px' } }\n        className=\"selecting-button\"\n      >\n        Explorar Bebidas\n      </button>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Explore;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Footer from '../../components/Footer/Footer';\nimport Header from '../../components/Header/Header';\n\nfunction ExploreFoods() {\n  const history = useHistory();\n  async function aleatory() {\n    const response = await fetch('https://www.themealdb.com/api/json/v1/1/random.php');\n    const data = await response.json();\n    const id = data.meals[0].idMeal;\n    history.push(`/comidas/${id}`);\n  }\n  return (\n    <div className=\"explore-foods application-container\">\n      <Header title=\"Explorar Comidas\" />\n      <button\n        type=\"button\"\n        data-testid=\"explore-by-ingredient\"\n        onClick={ () => history.push('/explorar/comidas/ingredientes') }\n        style={ { marginTop: '50px' } }\n        className=\"selecting-button\"\n      >\n        Por Ingredientes\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"explore-by-area\"\n        onClick={ () => history.push('/explorar/comidas/area') }\n        style={ { marginTop: '50px' } }\n        className=\"selecting-button\"\n      >\n        Por Local de Origem\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"explore-surprise\"\n        style={ { marginTop: '50px' } }\n        onClick={ aleatory }\n        className=\"selecting-button\"\n      >\n        Me Surpreenda!\n      </button>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreFoods;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Footer from '../../components/Footer/Footer';\nimport Header from '../../components/Header/Header';\n\nfunction ExploreDrinks() {\n  const history = useHistory();\n  async function aleatory() {\n    const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/random.php');\n    const data = await response.json();\n    const id = data.drinks[0].idDrink;\n    history.push(`/bebidas/${id}`);\n  }\n  return (\n    <div className=\"explore-drinks application-container\">\n      <Header title=\"Explorar Bebidas\" />\n      <button\n        type=\"button\"\n        data-testid=\"explore-by-ingredient\"\n        onClick={ () => history.push('/explorar/bebidas/ingredientes') }\n        style={ { marginTop: '50px' } }\n        className=\"selecting-button\"\n      >\n        Por Ingredientes\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"explore-surprise\"\n        onClick={ aleatory }\n        className=\"selecting-button\"\n      >\n        Me Surpreenda!\n      </button>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreDrinks;\n","import React, { useState, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nimport Footer from '../../components/Footer/Footer';\nimport Header from '../../components/Header/Header';\n\nimport './style.css';\n\nfunction redirecionar(id, history) {\n  history.push(`/comidas/${id}`);\n}\n\nfunction verify(param) {\n  if (param === 'All') {\n    return 'https://www.themealdb.com/api/json/v1/1/search.php?s';\n  }\n  return `https://www.themealdb.com/api/json/v1/1/filter.php?a=${param}`;\n}\n\nfunction transform(data) {\n  const temp = [];\n  const max = 12;\n  for (let index = 0; index < max; index += 1) {\n    if (data.meals[index]) {\n      temp.push(data.meals[index]);\n    }\n  }\n  return temp;\n}\n\nfunction ExploreAreas() {\n  const [areas, setAreas] = useState();\n  const [foods, setFoods] = useState();\n  const history = useHistory();\n\n  useEffect(() => {\n    async function getFoods() {\n      const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n      const data = await response.json();\n      const min = 12;\n      const max = 15;\n      data.meals.splice(min, max);\n      setFoods(data.meals);\n    }\n\n    async function getData() {\n      const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list');\n      const data = await response.json();\n      let indexFinal = 0;\n\n      for (let index = 0; index < data.meals.length; index += 1) {\n        if (data.meals[index].strArea === 'Croatian') {\n          indexFinal = index;\n        }\n      }\n\n      if (indexFinal !== 0) {\n        data.meals.splice(indexFinal, 1);\n      }\n      setAreas(data.meals);\n      getFoods();\n    }\n\n    getData();\n  }, []);\n\n  async function handleChange({ target: { value } }) {\n    const url = verify(value);\n\n    const response = await fetch(url);\n    const data = await response.json();\n    setFoods(transform(data));\n  }\n\n  if (!areas || !foods) return <h1>Loading</h1>;\n\n  return (\n    <div className=\"explore-areas\">\n      <Header title=\"Explorar Origem\" search />\n      <select\n        name=\"explore-by-area-dropdown\"\n        data-testid=\"explore-by-area-dropdown\"\n        style={ { marginTop: '70px' } }\n        onChange={ handleChange }\n      >\n        <option\n          value=\"All\"\n          data-testid=\"All-option\"\n        >\n          All\n        </option>\n        {\n          areas.map(\n            (area) => (\n              <option\n                value={ area.strArea }\n                key={ area.strArea }\n                data-testid={ `${area.strArea}-option` }\n              >\n                {area.strArea}\n              </option>\n            ),\n          )\n        }\n      </select>\n\n      <ul className=\"cardAreaOrigin\">\n\n        {\n          foods.map(\n            (comida, index) => (\n              <div\n                key={ comida.idMeal }\n                data-testid={ `${index}-recipe-card` }\n                className=\"cardOrigin\"\n                onClick={ () => redirecionar(comida.idMeal, history) }\n                aria-hidden=\"true\"\n              >\n                <h4\n                  className=\"cardTitleOrigin\"\n                  data-testid={ `${index}-card-name` }\n                >\n                  { comida.strMeal }\n                </h4>\n                <img\n                  src={ comida.strMealThumb }\n                  alt={ `${index}-card-name` }\n                  style={ { height: '50px' } }\n                  data-testid={ `${index}-card-img` }\n                />\n              </div>\n            ),\n          )\n\n        }\n\n      </ul>\n      <Footer />\n    </div>\n  );\n}\n\nExploreAreas.propTypes = {\n  match: propTypes.shape({\n    path: propTypes.string,\n  }).isRequired,\n  history: propTypes.shape({\n    push: propTypes.func }).isRequired,\n};\n\nexport default ExploreAreas;\n","import React, { useContext, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\n\nimport Footer from '../../components/Footer/Footer';\nimport Header from '../../components/Header/Header';\nimport recipesContext from '../../context/recipesContext';\nimport Loading from '../../components/Loading';\n\nimport './ExploreIngredients.css';\n\nfunction ExploreIngredientsFoods({ history }) {\n  const { setRecipesIngredients } = useContext(recipesContext);\n  const [ingredientes, setIngredientes] = useState();\n\n  useEffect(() => {\n    async function getData() {\n      const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list');\n      const data = await response.json();\n      const QUANTITY = 100;\n      setIngredientes(data.meals.filter((__, index) => index < QUANTITY));\n    }\n    getData();\n  }, []);\n  if (!ingredientes) return <Loading />;\n\n  return (\n    <div className=\"explore-ingredients-foods application-container\">\n      <Header title=\"Explorar Ingredientes\" />\n      <ul className=\"ingredients-list-container\">\n        {\n          ingredientes.map(\n            (item, index) => (\n              <button\n                type=\"button\"\n                onClick={ () => {\n                  setRecipesIngredients(item.strIngredient);\n                  history.push('/comidas');\n                } }\n                key={ item.idIngredient }\n                data-testid={ `${index}-ingredient-card` }\n                className=\"ingredient-item\"\n              >\n                <img data-testid={ `${index}-card-img` } src={ `https://www.themealdb.com/images/ingredients/${item.strIngredient}-Small.png` } alt={ item.strIngredient } />\n                <p data-testid={ `${index}-card-name` }>{ item.strIngredient }</p>\n              </button>\n            ),\n          )\n        }\n      </ul>\n      <Footer />\n    </div>\n  );\n}\n\nExploreIngredientsFoods.propTypes = {\n  history: propTypes.shape({\n    push: propTypes.func,\n  }).isRequired,\n};\n\nexport default ExploreIngredientsFoods;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Footer from '../../components/Footer/Footer';\nimport Header from '../../components/Header/Header';\nimport Loading from '../../components/Loading';\nimport drinksContext from '../../context/drinksContext';\n\nimport './ExploreIngredients.css';\n\nfunction ExploreIngredientsDrinks() {\n  const { setDrinksIngredients } = useContext(drinksContext);\n  const [ingredientes, setIngredientes] = useState();\n  const history = useHistory();\n  useEffect(() => {\n    async function getData() {\n      const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list');\n      const data = await response.json();\n      const QUANTITY = 100;\n      setIngredientes(data.drinks.filter((__, index) => index < QUANTITY));\n    }\n    getData();\n  }, []);\n\n  async function redirecionar(ingredient) {\n    // const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?i=${ingredient}`);\n    // const data = await response.json();\n    setDrinksIngredients(ingredient);\n\n    history.push('/bebidas');\n  }\n\n  if (!ingredientes) return <Loading />;\n\n  return (\n    <div className=\"explore-ingredients-drinks application-container\">\n      <Header title=\"Explorar Ingredientes\" />\n      <ul className=\"ingredients-list-container\">\n        {\n          ingredientes.map(\n            (item, index) => (\n              <button\n                type=\"button\"\n                onClick={ () => redirecionar(item.strIngredient1) }\n                key={ item.strIngredient1 }\n                data-testid={ `${index}-ingredient-card` }\n                aria-hidden=\"true\"\n                className=\"ingredient-item\"\n              >\n                <img data-testid={ `${index}-card-img` } src={ `https://www.thecocktaildb.com/images/ingredients/${item.strIngredient1}-Small.png` } alt={ item.strIngredient1 } />\n                <p data-testid={ `${index}-card-name` }>{ item.strIngredient1 }</p>\n              </button>\n            ),\n          )\n        }\n      </ul>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreIngredientsDrinks;\n","function RemoveFavorite(recipe, type, isFavorite) {\n  let favoritas = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  if (isFavorite) {\n    const newFavoritas = favoritas.filter((a) => a.id !== recipe.id);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoritas));\n  } else {\n    favoritas = [];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoritas));\n  }\n}\n\nexport default RemoveFavorite;\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Copy from 'clipboard-copy';\n\nimport RemoveFavorite from './helper';\n\nimport WhiteHeart from '../../images/whiteHeartIcon.svg';\nimport BlackHeart from '../../images/blackHeartIcon.svg';\nimport shareIcon from '../../images/shareIcon.svg';\n\nimport './styles.css';\n\nfunction HorizontalCardDrink({ recipe, index, isFavorite, setFavoriteFoods }) {\n  const { image, category, name, alcoholicOrNot, doneDate: date, type, id, tags } = recipe;\n\n  const [showMessage, setShowmessage] = useState(false);\n  const [favorite, setFavorite] = useState(true);\n\n  const handleClick = () => {\n    const link = `http://${window.location.href.split('/')[2]}/${type}s/${id}`;\n    Copy(link);\n\n    setShowmessage(true);\n  };\n\n  const handleFavorite = () => {\n    RemoveFavorite(recipe, type, isFavorite);\n    setFavorite(!favorite);\n    setFavoriteFoods(JSON.parse(localStorage.favoriteRecipes));\n  };\n\n  return (\n    <section className=\"done-card\">\n      <Link to={ `/${type}s/${id}` }>\n        <h2 data-testid={ `${index}-horizontal-name` }>{name}</h2>\n      </Link>\n      <Link to={ `/${type}s/${id}` }>\n        <img\n          src={ image }\n          alt=\"recipe\"\n          data-testid={ `${index}-horizontal-image` }\n        />\n      </Link>\n      <p data-testid={ `${index}-horizontal-top-text` }>{category}</p>\n      <p data-testid={ `${index}-horizontal-done-date` }>{date}</p>\n      <p data-testid={ `${index}-horizontal-top-text` }>{alcoholicOrNot}</p>\n      <button\n        type=\"button\"\n        onClick={ handleClick }\n        data-testid={ `${index}-horizontal-share-btn` }\n        src={ shareIcon }\n      >\n        <img src={ shareIcon } alt=\"\" />\n      </button>\n      {showMessage && <p>Link copiado!</p>}\n      {tags && tags.map((tag, tagIndex) => (\n        <p\n          key={ tagIndex }\n          data-testid={ `${index}-${tag}-horizontal-tag` }\n        >\n          {tag}\n        </p>))}\n      {\n        isFavorite && <input\n          type=\"image\"\n          src={ favorite ? BlackHeart : WhiteHeart }\n          data-testid={ `${index}-horizontal-favorite-btn` }\n          alt=\"Favorite\"\n          onClick={ handleFavorite }\n        />\n      }\n    </section>\n  );\n}\n\nHorizontalCardDrink.propTypes = {\n  recipe: propTypes.shape({\n    image: propTypes.string,\n    category: propTypes.string,\n    name: propTypes.string,\n    doneDate: propTypes.string,\n    type: propTypes.string,\n    id: propTypes.string,\n    tags: propTypes.arrayOf(propTypes.string),\n    alcoholicOrNot: propTypes.string,\n\n  }).isRequired,\n  index: propTypes.number.isRequired,\n  isFavorite: propTypes.bool,\n  setFavoriteFoods: propTypes.func,\n};\n\nHorizontalCardDrink.defaultProps = {\n  isFavorite: false,\n  setFavoriteFoods: () => {},\n};\n\nexport default HorizontalCardDrink;\n","function RemoveFavorite(recipe, type, isFavorite) {\n  let favoritas = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  if (isFavorite) {\n    const newFavoritas = favoritas.filter((a) => a.id !== recipe.id);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoritas));\n  } else {\n    favoritas = [];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoritas));\n  }\n}\n\nexport default RemoveFavorite;\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Copy from 'clipboard-copy';\n\nimport RemoveFavorite from './helper';\n\nimport WhiteHeart from '../../images/whiteHeartIcon.svg';\nimport BlackHeart from '../../images/blackHeartIcon.svg';\nimport shareIcon from '../../images/shareIcon.svg';\n\nimport './styles.css';\n\nfunction HorizontalCardFood({ recipe, index, isFavorite, setFavoriteFoods }) {\n  const { image, category, name, area, doneDate: date, id, type, tags } = recipe;\n\n  const [showMessage, setShowmessage] = useState(false);\n  const [favorite, setFavorite] = useState(true);\n\n  const handleClick = () => {\n    const link = `http://${window.location.href.split('/')[2]}/${type}s/${id}`;\n    Copy(link);\n    setShowmessage(true);\n  };\n\n  const handleFavorite = () => {\n    RemoveFavorite(recipe, type, isFavorite);\n    setFavorite(!favorite);\n    setFavoriteFoods(JSON.parse(localStorage.favoriteRecipes));\n  };\n\n  return (\n    <section className=\"done-card\">\n      <Link to={ `/${type}s/${id}` }>\n        <h2 data-testid={ `${index}-horizontal-name` }>{name}</h2>\n      </Link>\n      <Link to={ `/${type}s/${id}` }>\n        <img src={ image } alt=\"recipe\" data-testid={ `${index}-horizontal-image` } />\n      </Link>\n      <p data-testid={ `${index}-horizontal-top-text` }>{ `${area} - ${category}`}</p>\n      <p data-testid={ `${index}-horizontal-done-date` }>{date}</p>\n      <button\n        type=\"button\"\n        onClick={ handleClick }\n        data-testid={ `${index}-horizontal-share-btn` }\n        src={ shareIcon }\n      >\n        <img src={ shareIcon } alt=\"\" />\n      </button>\n      {showMessage && <p>Link copiado!</p>}\n      {tags && tags.map((tag, tagIndex) => (\n        <p\n          key={ tagIndex }\n          data-testid={ `${index}-${tag}-horizontal-tag` }\n        >\n          {tag}\n        </p>))}\n      {\n        isFavorite && <input\n          type=\"image\"\n          src={ favorite ? BlackHeart : WhiteHeart }\n          data-testid={ `${index}-horizontal-favorite-btn` }\n          alt=\"Favorite\"\n          onClick={ handleFavorite }\n        />\n      }\n    </section>\n  );\n}\n\nHorizontalCardFood.propTypes = {\n  recipe: propTypes.shape({\n    image: propTypes.string,\n    category: propTypes.string,\n    name: propTypes.string,\n    doneDate: propTypes.string,\n    type: propTypes.string,\n    id: propTypes.string,\n    tags: propTypes.arrayOf(propTypes.string),\n    area: propTypes.string,\n  }).isRequired,\n  index: propTypes.number.isRequired,\n  isFavorite: propTypes.bool,\n  setFavoriteFoods: propTypes.func,\n};\n\nHorizontalCardFood.defaultProps = {\n  isFavorite: false,\n  setFavoriteFoods: () => {},\n};\n\nexport default HorizontalCardFood;\n","import React, { useState, useEffect } from 'react';\n\nimport Header from '../../components/Header/Header';\n\nimport HorizontalCardDrink from '../../components/HorizontalCardDrink';\nimport HorizontalCardFood from '../../components/HorizontalCardFood';\n\nimport './styles.css';\n\nfunction Favorites() {\n  const [foods, setFoods] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [showFoods, setShowFoods] = useState(false);\n  const [showDrinks, setShowDrinks] = useState(false);\n  const [favoriteFoods, setFavoriteFoods] = useState(localStorage.favoriteRecipes\n    ? JSON.parse(localStorage.favoriteRecipes) : []);\n\n  useEffect(() => {\n    const allRecipesWithIndex = favoriteFoods\n      .map((recipe, index) => ({ ...recipe, index }));\n    const foodsToSet = allRecipesWithIndex\n      .filter((recipe) => recipe.type === 'comida');\n    const drinksToSet = allRecipesWithIndex.filter((recipe) => recipe.type === 'bebida');\n\n    if (foodsToSet) setShowFoods(true);\n    if (drinksToSet) setShowDrinks(true);\n    setFoods(foodsToSet);\n    setDrinks(drinksToSet);\n  }, [favoriteFoods]);\n\n  return (\n    <section className=\"favorite-recipes application-container\">\n      <Header title=\"Receitas Favoritas\" />\n      <div className=\"favorite-recipes-buttons-div\">\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          onClick={ () => {\n            setShowFoods(true);\n            setShowDrinks(true);\n          } }\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          onClick={ () => {\n            setShowFoods(true);\n            setShowDrinks(false);\n          } }\n        >\n          Food\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          onClick={ () => {\n            setShowFoods(false);\n            setShowDrinks(true);\n          } }\n        >\n          Drinks\n        </button>\n      </div>\n      {showFoods && foods.map((food, index) => (<HorizontalCardFood\n        recipe={ food }\n        index={ food.index }\n        key={ index }\n        isFavorite\n        setFavoriteFoods={ setFavoriteFoods }\n      />))}\n      {showDrinks && drinks.map((drink, index) => (<HorizontalCardDrink\n        recipe={ drink }\n        index={\n          showFoods\n            ? drink.index\n            : index\n        }\n        key={ index }\n        isFavorite\n        setFavoriteFoods={ setFavoriteFoods }\n      />))}\n    </section>\n  );\n}\n\nexport default Favorites;\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Copy from 'clipboard-copy';\n\nimport RemoveFavorite from './helper';\n\nimport WhiteHeart from '../../images/whiteHeartIcon.svg';\nimport BlackHeart from '../../images/blackHeartIcon.svg';\nimport shareIcon from '../../images/shareIcon.svg';\n\nimport './styles.css';\n\nfunction HorizontalCardFoodList({ recipe, index, isFavorite, setFavoriteFoods }) {\n  const { image, category, name, area, doneDate: date, id, type, tags } = recipe;\n\n  const [showMessage, setShowmessage] = useState(false);\n  const [favorite, setFavorite] = useState(true);\n\n  const handleClick = () => {\n    const link = `http://${window.location.href.split('/')[2]}/${type}s/${id}`;\n    Copy(link);\n    setShowmessage(true);\n  };\n\n  const handleFavorite = () => {\n    RemoveFavorite(recipe, type, isFavorite);\n    setFavorite(!favorite);\n    setFavoriteFoods(JSON.parse(localStorage.favoriteRecipes));\n  };\n\n  return (\n    <section className=\"done-card\" data-testid={ `${index}-recipe-card` }>\n      <Link to={ `/${type}s/${id}` }>\n        <h2 data-testid={ `${index}-card-name` }>{name}</h2>\n      </Link>\n      <Link to={ `/${type}s/${id}` }>\n        <img src={ image } alt=\"recipe\" data-testid={ `${index}-card-img` } />\n      </Link>\n      {(area || category)\n      && (\n        <p\n          data-testid={ `${index}-card-top-text` }\n        >\n          { `${area || ''} - ${category || ''}`}\n\n        </p>)}\n      <p data-testid={ `${index}-card-done-date` }>{date}</p>\n      {/* <buttond\n        type=\"button\"\n        onClick={ handleClick }\n        data-testid={ `${index}-card-share-btn` }\n        src={ shareIcon }\n      >\n        <img src={ shareIcon } alt=\"\" />\n      </buttond> */}\n      {/* <input\n        type=\"image\"\n        alt=\"share\"\n        src={ shareIcon }\n        data-testid={ `${index}-card-share-btn` }\n        onClick={ handleClick }\n      />\n      {showMessage && <p>Link copiado!</p>}\n      {tags && tags.map((tag, tagIndex) => (\n        <p\n          key={ tagIndex }\n          data-testid={ `${index}-${tag}-card-tag` }\n        >\n          {tag}\n        </p>))}\n      {\n        isFavorite && <input\n          type=\"image\"\n          src={ favorite ? BlackHeart : WhiteHeart }\n          data-testid={ `${index}-card-favorite-btn` }\n          alt=\"Favorite\"\n          onClick={ handleFavorite }\n        />\n      } */}\n    </section>\n  );\n}\n\nHorizontalCardFoodList.propTypes = {\n  recipe: propTypes.shape({\n    image: propTypes.string,\n    category: propTypes.string,\n    name: propTypes.string,\n    doneDate: propTypes.string,\n    type: propTypes.string,\n    id: propTypes.string,\n    tags: propTypes.arrayOf(propTypes.string),\n    area: propTypes.string,\n  }).isRequired,\n  index: propTypes.number.isRequired,\n  isFavorite: propTypes.bool,\n  setFavoriteFoods: propTypes.func,\n};\n\nHorizontalCardFoodList.defaultProps = {\n  isFavorite: false,\n  setFavoriteFoods: () => {},\n};\n\nexport default HorizontalCardFoodList;\n","import React, { useContext, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\n\nimport './styles.css';\n\nimport Footer from '../../components/Footer/Footer';\nimport Header from '../../components/Header/Header';\nimport HorizontalCardFoodList from '../../components/HorizontalCardFoodList';\nimport recipesContext from '../../context/recipesContext';\nimport Loading from '../../components/Loading';\n\nconst BASIC_URL = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n\nfunction Foods({ match, history }) {\n  const { recipesIngredients } = useContext(recipesContext);\n  const [foods, setFoods] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [categorySelected, setCategorySelected] = useState('all');\n  const [loadingCategory, setLoadingCategory] = useState(false);\n  const [loadingFood, setLoadingFood] = useState(false);\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      setLoadingCategory(true);\n      const MAX_NUMBER_CATEGORIES = 5;\n      const responseMeals = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list');\n      const array = await responseMeals.json();\n      const { meals } = array;\n      const arrayCategories = meals.map((meal) => meal.strCategory);\n      const arrayCategoriesLimited = arrayCategories\n        .filter((__, index) => index < MAX_NUMBER_CATEGORIES);\n      await setCategories(arrayCategoriesLimited);\n      setLoadingCategory(false);\n    };\n\n    fetchCategories();\n  }, []);\n\n  useEffect(() => {\n    const fetchFoods = async () => {\n      setLoadingFood(true);\n      const MAX_NUMBER_FOODS = 12;\n      const responseMeals = await fetch(BASIC_URL);\n      const array = await responseMeals.json();\n      const { meals } = array;\n      const mealsLimited = meals\n        .filter((__, index) => index < MAX_NUMBER_FOODS);\n      await setFoods(mealsLimited);\n      setLoadingFood(false);\n    };\n\n    const fetchFoodsIngredients = async () => {\n      const MAX_NUMBER_FOODS = 12;\n      const responseMeals = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${recipesIngredients}`);\n      const array = await responseMeals.json();\n      const { meals } = array;\n      const mealsLimited = meals\n        .filter((__, index) => index < MAX_NUMBER_FOODS);\n      setFoods(mealsLimited);\n    };\n\n    if (recipesIngredients) {\n      fetchFoodsIngredients();\n    } else {\n      fetchFoods();\n    }\n  }, [recipesIngredients]);\n\n  const mealsCorrect = foods.map((food) => ({\n    image: food.strMealThumb,\n    category: food.strCategory,\n    name: food.strMeal,\n    area: food.strArea,\n    id: food.idMeal,\n    type: history.location.pathname.substring(1, history.location.pathname.length - 1)\n    ,\n  }));\n\n  const handleButtonCategory = async (category) => {\n    if (categorySelected !== category) {\n      const MAX_NUMBER_FOODS = 12;\n      const responseMeals = await fetch(\n        `https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`,\n      );\n      const array = await responseMeals.json();\n      const { meals } = array;\n      const mealsLimited = meals\n        .filter((__, index) => index < MAX_NUMBER_FOODS);\n      setFoods(mealsLimited);\n      setCategorySelected(category);\n    } else {\n      const MAX_NUMBER_FOODS = 12;\n      const responseMeals = await fetch(BASIC_URL);\n      const array = await responseMeals.json();\n      const { meals } = array;\n      const mealsLimited = meals\n        .filter((__, index) => index < MAX_NUMBER_FOODS);\n      setFoods(mealsLimited);\n      setCategorySelected('all');\n    }\n  };\n\n  const handleButtonAll = async () => {\n    const MAX_NUMBER_FOODS = 12;\n    const responseMeals = await fetch(BASIC_URL);\n    const array = await responseMeals.json();\n    const { meals } = array;\n    const mealsLimited = meals\n      .filter((__, index) => index < MAX_NUMBER_FOODS);\n    setFoods(mealsLimited);\n    setCategorySelected('all');\n  };\n\n  return (\n\n    (!loadingCategory && !loadingFood)\n      ? (\n        <div className=\"foods\">\n          <Header title=\"Comidas\" search match={ match } history={ history } />\n          <div className=\"recipes-buttons-container\">\n            <button\n              data-testid=\"All-category-filter\"\n              type=\"button\"\n              className=\"recipes-buttons\"\n              onClick={ () => handleButtonAll() }\n            >\n              All\n            </button>\n\n            {categories\n              ? (\n                categories.map((category, index) => (\n                  <button\n                    className=\"recipes-buttons\"\n                    key={ index }\n                    data-testid={ `${category}-category-filter` }\n                    type=\"button\"\n                    onClick={ () => handleButtonCategory(category) }\n                  >\n                    {category}\n                  </button>)))\n              : <p>Loading...</p>}\n\n          </div>\n\n          <div className=\"recipes-cards-container\">\n\n            {foods ? mealsCorrect.map((food, index) => (\n\n              <HorizontalCardFoodList\n                recipe={ food }\n                index={ index }\n                history={ history }\n                key={ index }\n              />\n\n            ))\n              : <p>Loading...</p>}\n\n          </div>\n\n          <Footer />\n        </div>)\n      : <Loading />\n\n  );\n}\n\nFoods.propTypes = {\n  match: propTypes.shape({\n    path: propTypes.string,\n  }).isRequired,\n  history: propTypes.shape({\n    push: propTypes.func,\n    location: propTypes.shape({\n      pathname: propTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Foods;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport './styles.css';\n\nfunction Login() {\n  const history = useHistory();\n  const PASSWORD_MINIMUM_LENGHT = 6;\n\n  const [user, setUser] = useState({\n    email: 'exampleuser@example.com',\n    password: 'thatsAgoodPassword',\n  });\n\n  const handleChange = ({ target: { name, value } }) => {\n    setUser((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = () => {\n    const { email } = user;\n\n    localStorage.mealsToken = 1;\n    localStorage.cocktailsToken = 1;\n    localStorage.user = JSON.stringify({ email });\n    history.push('/comidas');\n  };\n\n  const canBeSubmitted = () => {\n    const { email, password } = user;\n    const validEmail = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (email.match(validEmail) && password.length > PASSWORD_MINIMUM_LENGHT) {\n      return true;\n    }\n  };\n\n  return (\n    <div className=\"container-login\">\n      <img className=\"login-img\" src=\"https://yt3.ggpht.com/ytc/AKedOLT_0KTDhZEuw3jfp_7Y2RPy_zG7sp5ly3RdlYTk=s900-c-k-c0x00ffffff-no-rj\" />\n      <div className=\"login\">\n      <label htmlFor=\"email-input\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          data-testid=\"email-input\"\n          placeholder=\"Insira seu e-mail\"\n          onChange={ handleChange }\n          value={user.email}\n        />\n      </label>\n      <label htmlFor=\"password-input\">\n        <input\n          type=\"password\"\n          name=\"password\"\n          data-testid=\"password-input\"\n          placeholder=\"insira sua senha\"\n          onChange={ handleChange }\n          value={user.password}\n        />\n      </label>\n      <button\n        className=\"btn-login\"\n        type=\"button\"\n        data-testid=\"login-submit-btn\"\n        onClick={ handleSubmit }\n        disabled={ !canBeSubmitted() }\n      >\n        Entrar\n      </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useEffect, useState } from 'react';\n\nimport Header from '../../components/Header/Header';\n\nimport HorizontalCardDrink from '../../components/HorizontalCardDrink';\nimport HorizontalCardFood from '../../components/HorizontalCardFood';\n\nimport './styles.css';\n\nfunction Made() {\n  const [foods, setFoods] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [showFoods, setShowFoods] = useState(true);\n  const [showDrinks, setShowDrinks] = useState(true);\n\n  useEffect(() => {\n    let allRecipes = [];\n    if (localStorage.doneRecipes) { allRecipes = JSON.parse(localStorage.doneRecipes); }\n    const allRecipesWithIndex = allRecipes.map((recipe, index) => ({ ...recipe, index }));\n    const foodsToSet = allRecipesWithIndex.filter((recipe) => recipe.type === 'comida');\n    const drinksToSet = allRecipesWithIndex.filter((recipe) => recipe.type === 'bebida');\n    setFoods(foodsToSet);\n    setDrinks(drinksToSet);\n  }, []);\n\n  return (\n    <main className=\"made-recipes application-container\">\n      <Header title=\"Receitas Feitas\" />\n      <div className=\"buttons-div-made\">\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          onClick={ () => {\n            setShowFoods(true);\n            setShowDrinks(true);\n          } }\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          onClick={ () => {\n            setShowFoods(true);\n            setShowDrinks(false);\n          } }\n        >\n          Food\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          onClick={ () => {\n            setShowFoods(false);\n            setShowDrinks(true);\n          } }\n        >\n          Drinks\n        </button>\n      </div>\n      {showFoods && foods.map((food, index) => (<HorizontalCardFood\n        recipe={ food }\n        index={ food.index }\n        key={ index }\n      />))}\n      {showDrinks && drinks.map((drink, index) => (<HorizontalCardDrink\n        recipe={ drink }\n        index={\n          showFoods\n            ? drink.index\n            : index\n        }\n        key={ index }\n      />))}\n    </main>\n  );\n}\nexport default Made;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nimport Footer from '../../components/Footer/Footer';\nimport Header from '../../components/Header/Header';\n\nimport './styles.css';\n\nfunction Profile({ history }) {\n  let answer;\n  if (localStorage.user) {\n    const { email } = JSON.parse(localStorage.user);\n    answer = email;\n  } else {\n    answer = 'anonimo';\n  }\n\n  return (\n    <main className=\"profile\">\n      <Header title=\"Perfil\" />\n      <h3 data-testid=\"profile-email\" className=\"profile-email\">{answer}</h3>\n      <div className=\"profile-buttons-container\">\n        <div>\n          <button\n            type=\"button\"\n            className=\"recipes-buttons\"\n            data-testid=\"profile-done-btn\"\n            onClick={ () => {\n              history.push('/receitas-feitas');\n            } }\n          >\n            Receitas Feitas\n          </button>\n          <button\n            className=\"recipes-buttons\"\n            type=\"button\"\n            data-testid=\"profile-favorite-btn\"\n            onClick={ () => {\n              history.push('/receitas-favoritas');\n            } }\n          >\n            Receitas Favoritas\n          </button>\n        </div>\n        <button\n          className=\"recipes-buttons\"\n          type=\"button\"\n          data-testid=\"profile-logout-btn\"\n          onClick={ () => {\n            localStorage.clear();\n            history.push('/');\n          } }\n        >\n          Sair\n        </button>\n      </div>\n      <Footer />\n    </main>\n  );\n}\n\nProfile.propTypes = {\n  history: propTypes.shape({\n    push: propTypes.func,\n  }).isRequired,\n};\n\nexport default Profile;\n","const through = 'line-through';\n\nexport function checkInput(currentIngredients, check) {\n  const arrayLength = check.current.children.length;\n  for (let index = 0; index < arrayLength; index += 1) {\n    const ingredient = check.current.children[index].innerText;\n    const checked = check.current.children[index];\n\n    currentIngredients.forEach((element) => {\n      if (element.includes(ingredient.split(' ')[0])) {\n        check.current.children[index].style.textDecoration = through;\n        checked.children[0].checked = true;\n      }\n    });\n  }\n}\n\nexport function handleCocktails(target, completeIngredients, id) {\n  const { checked, value } = target;\n\n  let currentProgressRecipes = {};\n\n  if (Object.prototype.hasOwnProperty.call(localStorage, 'inProgressRecipes')) {\n    currentProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  }\n\n  if (checked) {\n    target.parentNode.style.textDecoration = through;\n    completeIngredients.push(value);\n    currentProgressRecipes.cocktails = {\n      ...currentProgressRecipes.cocktails, [id]: completeIngredients };\n  } else {\n    target.parentNode.style.textDecoration = '';\n    const index = currentProgressRecipes.cocktails[id].findIndex((e) => e === value);\n    currentProgressRecipes.cocktails[id].splice(index, 1);\n    completeIngredients.splice(index, 1);\n  }\n\n  localStorage.setItem('inProgressRecipes', JSON.stringify(currentProgressRecipes));\n}\n\nexport function handleMeals(target, completeIngredients, id) {\n  const { checked, value } = target;\n\n  let currentProgressRecipes = {};\n\n  if (Object.prototype.hasOwnProperty.call(localStorage, 'inProgressRecipes')) {\n    currentProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  }\n\n  if (checked) {\n    target.parentNode.style.textDecoration = through;\n    completeIngredients.push(value);\n    currentProgressRecipes.meals = {\n      ...currentProgressRecipes.meals, [id]: completeIngredients };\n  } else {\n    target.parentNode.style.textDecoration = '';\n    const index = currentProgressRecipes.meals[id].findIndex((e) => e === value);\n    currentProgressRecipes.meals[id].splice(index, 1);\n    completeIngredients.splice(index, 1);\n  }\n\n  localStorage.setItem('inProgressRecipes', JSON.stringify(currentProgressRecipes));\n}\n\nexport function getIngredientsCocktails(id, setCurrentIngredients) {\n  if (Object.prototype.hasOwnProperty.call(localStorage, 'inProgressRecipes')) {\n    const { cocktails } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (cocktails !== undefined && cocktails[id] !== undefined) {\n      setCurrentIngredients(cocktails[id]);\n    }\n  }\n}\n\nexport function getIngredientsMels(id, setCurrentIngredients) {\n  if (Object.prototype.hasOwnProperty.call(localStorage, 'inProgressRecipes')) {\n    const { meals } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (meals !== undefined && meals[id] !== undefined) {\n      setCurrentIngredients(meals[id]);\n    }\n  }\n}\n\nexport function handleButton(completeIngredients, ingredients, setButton) {\n  if (completeIngredients.length === ingredients.length) {\n    setButton(false);\n  }\n}\n","import React from 'react';\n\nfunction ExploreDrinksArea() {\n  return <h1>Not Found</h1>;\n}\n\nexport default ExploreDrinksArea;\n","import Details from './Details';\nimport Drinks from './Drinks';\nimport Explore from './Explore';\nimport ExploreFoods from './ExploreFoods';\nimport ExploreDrinks from './ExploreDrinks';\nimport ExploreAreas from './ExploreAreas';\nimport ExploreIngredientsFoods from './ExploreIngredientsFoods';\nimport ExploreIngredientsDrinks from './ExploreIngredientsDrinks';\nimport Favorites from './Favorites';\nimport Foods from './Foods';\nimport Login from './Login';\nimport Made from './Made';\nimport Profile from './Profile';\nimport ProgressFood from './ProgressFood';\nimport ProgressDrink from './ProgressDrink';\nimport ExploreDrinksArea from './ExploreDrinksArea';\nimport Loading from '../components/Loading';\n\nexport default {\n  Details,\n  Drinks,\n  Explore,\n  ExploreFoods,\n  ExploreDrinks,\n  ExploreAreas,\n  ExploreIngredientsFoods,\n  ExploreIngredientsDrinks,\n  Favorites,\n  Foods,\n  Login,\n  Made,\n  Profile,\n  ProgressFood,\n  ProgressDrink,\n  ExploreDrinksArea,\n  Loading,\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport Copy from 'clipboard-copy';\nimport propTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport helper from '../Details/helper';\nimport { handleMeals, getIngredientsMels,\n  handleButton, checkInput } from '../ProgressDrink/Helper';\n\nimport WhiteHeart from '../../images/whiteHeartIcon.svg';\nimport BlackHeart from '../../images/blackHeartIcon.svg';\nimport Share from '../../images/shareIcon.svg';\n\nimport './style.css';\n\nexport default function ProgressFood({ match: { params: { id } } }) {\n  const [meal, setMeal] = useState({});\n  const [button, setButton] = useState(true);\n  const [copied, setCopied] = useState(false);\n  const [favorite, setFavorite] = useState(false);\n  const [currentIngredients, setCurrentIngredients] = useState([]);\n  const check = useRef();\n  const history = useHistory();\n  const completeIngredients = currentIngredients;\n\n  useEffect(() => {\n    async function getDrink() {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const data = await response.json();\n      setMeal(...data.meals);\n    }\n\n    getIngredientsMels(id, setCurrentIngredients);\n    helper.verifyFavorite(id, setFavorite);\n    getDrink();\n  }, [id]);\n\n  useEffect(() => {\n    checkInput(currentIngredients, check);\n  });\n\n  const ingredients = [];\n  const quantity = [];\n  const max = 20;\n  for (let index = 1; index <= max; index += 1) {\n    const key = `strIngredient${index}`;\n    const measureKey = `strMeasure${index}`;\n    if (meal[key]) {\n      ingredients.push(meal[key]);\n    }\n    if (meal[measureKey]) {\n      quantity.push(meal[measureKey]);\n    }\n  }\n\n  function handleRedirect() {\n    history.push('/receitas-feitas');\n    const today = new Date();\n    const date = `${today.getDate()}/${today.getMonth() + 1}/${today.getFullYear()}`;\n    let allRecipes = [];\n    if (localStorage.doneRecipes) { allRecipes = JSON.parse(localStorage.doneRecipes); }\n    const OBJmeal = {\n      id: meal.idMeal,\n      type: 'comida',\n      area: meal.strArea,\n      category: meal.strCategory,\n      alcoholicOrNot: '',\n      name: meal.strMeal,\n      image: meal.strMealThumb,\n      doneDate: date,\n      tags: [meal.strTags],\n    };\n    const allNewRecipes = [...allRecipes, OBJmeal];\n    localStorage.doneRecipes = JSON.stringify(allNewRecipes);\n  }\n\n  function shareButton() {\n    Copy(`http://localhost:3000/comidas/${id}`);\n    setCopied(true);\n  }\n\n  return (\n    <div className=\"container\">\n      <img\n        data-testid=\"recipe-photo\"\n        className=\"progress-img\"\n        style={ { height: '150px' } }\n        src={ meal.strMealThumb }\n        alt=\"\"\n      />\n      <div className=\"container-progress\">\n        <div className=\"title-style\">\n          <div>\n            <h2 data-testid=\"recipe-title\">{ meal.strMeal }</h2>\n            <h4 data-testid=\"recipe-category\">{ meal.strCategory }</h4>\n          </div>\n          <div className=\"icon-style\">\n            <input\n              type=\"image\"\n              src={ favorite ? BlackHeart : WhiteHeart }\n              data-testid=\"favorite-btn\"\n              alt=\"Favorite\"\n              onClick={\n                () => helper\n                  .saveFavoriteLocalstorage(meal, favorite, setFavorite, 'idMeal')\n              }\n            />\n            <input\n              type=\"image\"\n              alt=\"share\"\n              src={ Share }\n              data-testid=\"share-btn\"\n              onClick={ shareButton }\n            />\n          </div>\n          {\n            copied\n            && 'Link copiado!'\n          }\n        </div>\n        <h3>Ingredients</h3>\n        <div className=\"ing-style\">\n          <ul ref={ check }>\n            {ingredients.map((ingredient, index) => (\n              <li\n                data-testid={ `${index}-ingredient-step` }\n                key={ index }\n              >\n                <label htmlFor={ ingredient }>\n                  {`${ingredient} ${quantity[index]}`}\n\n                  <input\n                    onChange={ ({ target }) => {\n                      handleMeals(target, completeIngredients, id);\n                      handleButton(completeIngredients, ingredients, setButton, history);\n                    } }\n                    name={ ingredient }\n                    value={ ingredient }\n                    id={ ingredient }\n                    type=\"checkbox\"\n                  />\n                </label>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <h3>Instructions</h3>\n        <div className=\"inst-style\">\n          <p data-testid=\"instructions\">{ meal.strInstructions }</p>\n        </div>\n        <button\n          className=\"progress-recipe-btn\"\n          disabled={ button }\n          data-testid=\"finish-recipe-btn\"\n          type=\"button\"\n          onClick={ handleRedirect }\n        >\n          Finalizar Receita\n        </button>\n      </div>\n    </div>\n  );\n}\n\nProgressFood.propTypes = {\n  match: propTypes.shape({\n    params: propTypes.shape({\n      id: propTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport Copy from 'clipboard-copy';\nimport propTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport helper from '../Details/helper';\nimport { handleCocktails, getIngredientsCocktails,\n  handleButton, checkInput } from './Helper';\n\nimport '../ProgressFood/style.css';\nimport WhiteHeart from '../../images/whiteHeartIcon.svg';\nimport BlackHeart from '../../images/blackHeartIcon.svg';\nimport Share from '../../images/shareIcon.svg';\n\nexport default function ProgressDrink({ match: { params: { id } } }) {\n  const [drink, setDrink] = useState({});\n  const [button, setButton] = useState(true);\n  const [copied, setCopied] = useState(false);\n  const [favorite, setFavorite] = useState(false);\n  const [currentIngredients, setCurrentIngredients] = useState([]);\n  const history = useHistory();\n  const check = useRef();\n  const completeIngredients = currentIngredients;\n\n  useEffect(() => {\n    async function getDrink() {\n      const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const data = await response.json();\n      setDrink(...data.drinks);\n    }\n\n    getIngredientsCocktails(id, setCurrentIngredients);\n    getDrink();\n\n    helper.verifyFavorite(id, setFavorite);\n  }, [id]);\n\n  useEffect(() => {\n    checkInput(currentIngredients, check);\n  });\n\n  const ingredients = [];\n  const quantity = [];\n  const max = 20;\n  for (let index = 1; index <= max; index += 1) {\n    const key = `strIngredient${index}`;\n    const measureKey = `strMeasure${index}`;\n    if (drink[key]) {\n      ingredients.push(drink[key]);\n    }\n    if (drink[measureKey]) {\n      quantity.push(drink[measureKey]);\n    }\n  }\n\n  function handleRedirect() {\n    history.push('/receitas-feitas');\n    const today = new Date();\n    const date = `${today.getDate()}/${today.getMonth() + 1}/${today.getFullYear()}`;\n    let allRecipes = [];\n    if (localStorage.doneRecipes) { allRecipes = JSON.parse(localStorage.doneRecipes); }\n    const OBJdrink = {\n      id: drink.idDrink,\n      type: 'bebida',\n      area: '',\n      category: drink.strCategory,\n      alcoholicOrNot: drink.strAlcoholic,\n      name: drink.strDrink,\n      image: drink.strDrinkThumb,\n      doneDate: date,\n      tags: [drink.strTags],\n    };\n    const allNewRecipes = [...allRecipes, OBJdrink];\n    localStorage.doneRecipes = JSON.stringify(allNewRecipes);\n  }\n\n  function shareButton() {\n    Copy(`http://localhost:3000/bebidas/${id}`);\n    setCopied(true);\n  }\n  return (\n    <div className=\"container\">\n      <img\n        className=\"progress-img\"\n        data-testid=\"recipe-photo\"\n        style={ { height: '150px' } }\n        src={ drink.strDrinkThumb }\n        alt=\"\"\n      />\n      <div className=\"container-progress\">\n        <div className=\"title-style\">\n          <div>\n            <h2 data-testid=\"recipe-title\">{ drink.strDrink }</h2>\n            <h4 data-testid=\"recipe-category\">{ drink.strAlcoholic }</h4>\n          </div>\n          <div className=\"icon-style\">\n            <input\n              type=\"image\"\n              src={ favorite ? BlackHeart : WhiteHeart }\n              data-testid=\"favorite-btn\"\n              alt=\"Favorite\"\n              onClick={\n                () => helper\n                  .saveFavoriteLocalstorage(drink, favorite, setFavorite, 'idDrink')\n              }\n            />\n            <input\n              type=\"image\"\n              alt=\"share\"\n              src={ Share }\n              data-testid=\"share-btn\"\n              onClick={ shareButton }\n            />\n            {\n              copied\n              && 'Link copiado!'\n            }\n          </div>\n        </div>\n        <h3>Ingredients</h3>\n        <div className=\"ing-style\">\n          <ul ref={ check }>\n            {ingredients.map((ingredient, index) => (\n              <li\n                data-testid={ `${index}-ingredient-step` }\n                key={ index }\n                /* style={ currentIngredients.includes(ingredient)\n                  ? { textDecoration: 'line-through' } : undefined } */\n              >\n                <label htmlFor={ ingredient }>\n\n                  {`${ingredient} ${quantity[index]}`}\n                  <input\n                  /* checked={ currentIngredients.includes(ingredient) || undefined } */\n                    onChange={ ({ target }) => {\n                      handleCocktails(target, completeIngredients, id);\n                      handleButton(completeIngredients, ingredients, setButton, history);\n                    } }\n                    value={ ingredient }\n                    id={ ingredient }\n                    type=\"checkbox\"\n                  />\n\n                </label>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <h3>Instructions</h3>\n        <div className=\"inst-style\">\n          <p data-testid=\"instructions\">{ drink.strInstructions }</p>\n        </div>\n        <button\n          className=\"progress-recipe-btn\"\n          disabled={ button }\n          data-testid=\"finish-recipe-btn\"\n          type=\"button\"\n          onClick={ handleRedirect }\n        >\n          Finalizar Receita\n        </button>\n\n      </div>\n    </div>\n  );\n}\n\nProgressDrink.propTypes = {\n  match: propTypes.shape({\n    params: propTypes.shape({\n      id: propTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport drinksContext from './drinksContext';\nimport recipesContext from './recipesContext';\n\nfunction Provider({ children }) {\n  const [recipes, setRecipes] = useState([]);\n  const [recipesCategory, setRecipesCategory] = useState([]);\n  const [recipesIngredients, setRecipesIngredients] = useState();\n  const [recipesAreas, setRecipesAreas] = useState([]);\n  const [searchedRecipes, setSearchedRecipes] = useState([]);\n\n  const [drinks, setDrinks] = useState([]);\n  const [drinksCategory, setDrinksCategory] = useState([]);\n  const [searchedDrinks, setSearchedDrinks] = useState([]);\n  const [drinksIngredients, setDrinksIngredients] = useState();\n\n  const drinksObject = {\n    drinks,\n    drinksCategory,\n    searchedDrinks,\n    drinksIngredients,\n    setSearchedDrinks,\n    setDrinksIngredients,\n  };\n\n  const recipesObject = {\n    recipes,\n    recipesCategory,\n    recipesIngredients,\n    recipesAreas,\n    searchedRecipes,\n    setRecipesIngredients,\n    setSearchedRecipes,\n  };\n\n  async function getData(url, setState, param) {\n    const response = await fetch(url);\n    const data = await response.json();\n    setState(data[param]);\n  }\n\n  useEffect(() => {\n    getData('https://www.themealdb.com/api/json/v1/1/search.php?s=', setRecipes, 'meals');\n    /* getData('https://www.themealdb.com/api/json/v1/1/list.php?i=list', setRecipesIngredients, 'meals'); */\n    getData('https://www.themealdb.com/api/json/v1/1/list.php?c=list', setRecipesCategory, 'meals');\n    getData('https://www.themealdb.com/api/json/v1/1/list.php?a=list', setRecipesAreas, 'meals');\n\n    getData('https://www.thecocktaildb.com/api/json/v1/1/search.php?s', setDrinks, 'drinks');\n    getData('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list', setDrinksCategory, 'drinks');\n  }, []);\n\n  return (\n    <drinksContext.Provider value={ drinksObject }>\n      <recipesContext.Provider value={ recipesObject }>\n        {children}\n      </recipesContext.Provider>\n    </drinksContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: propTypes.node.isRequired,\n};\n\nexport default Provider;\n","import React from 'react';\nimport './ExplanationTextStyles.css';\n\nimport textImage from '../../images/text.gif';\n\nfunction ExplanationText() {\n  return (\n    <section>\n      <h1 className=\"explanation_title\">Recipes App</h1>\n      <p className=\"explanation_p\">Esta é a aplicação Recipes App. Um site de receitas no idioma Inglês. Produzido por André Pessoa, Diego Demontier, Joao Victor Cristino e Ygor Lage. </p>\n      <p className=\"explanation_p\">A aplicação foi feita para mobile, então para melhor testa-la use seu smarthphone. Mesmo assim é possível testa-la em um desktop, basta testar com o emulador de smartphone ao lado. Obrigado e nos dê seu feedback :D</p>\n      <img src={ textImage } alt=\"recipe-taking\" className=\"text-image\" />\n    </section>\n  );\n}\n\nexport default ExplanationText;\n","/* eslint-disable react/jsx-max-depth */\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Pages from './pages';\nimport Provider from './context/provider';\n\nimport './styles/Global.css';\nimport './styles/RecipesBoxes.css';\nimport ExplanationText from './components/ExplanationText';\n\nfunction App() {\n  return (\n    <main className=\"site-container\">\n      <div className=\"recipes-application-border\">\n\n        <div className=\"recipes-application\">\n          <Provider>\n            <Switch>\n              <Route exact component={ Pages.Login } path=\"/\" />\n              <Route exact component={ Pages.Foods } path=\"/comidas\" />\n              <Route exact component={ Pages.Drinks } path=\"/bebidas\" />\n              <Route exact component={ Pages.Details } path=\"/comidas/:id\" />\n              <Route exact component={ Pages.Details } path=\"/bebidas/:id\" />\n              <Route\n                exact\n                component={ Pages.ProgressFood }\n                path=\"/comidas/:id/in-progress\"\n              />\n              <Route\n                exact\n                component={ Pages.ProgressDrink }\n                path=\"/bebidas/:id/in-progress\"\n              />\n              <Route exact component={ Pages.Explore } path=\"/explorar\" />\n              <Route exact component={ Pages.ExploreFoods } path=\"/explorar/comidas\" />\n              <Route exact component={ Pages.ExploreDrinks } path=\"/explorar/bebidas\" />\n              <Route\n                exact\n                component={ Pages.ExploreIngredientsFoods }\n                path=\"/explorar/comidas/ingredientes\"\n              />\n              <Route\n                exact\n                component={ Pages.ExploreIngredientsDrinks }\n                path=\"/explorar/bebidas/ingredientes\"\n              />\n              <Route\n                exact\n                component={ Pages.ExploreAreas }\n                path=\"/explorar/comidas/area\"\n              />\n              <Route\n                exact\n                component={ Pages.ExploreDrinksArea }\n                path=\"/explorar/bebidas/area\"\n              />\n              <Route exact component={ Pages.Profile } path=\"/perfil\" />\n              <Route exact component={ Pages.Made } path=\"/receitas-feitas\" />\n              <Route exact component={ Pages.Favorites } path=\"/receitas-favoritas\" />\n              <Route exact component={ Pages.Loading } path=\"/loading\" />\n            </Switch>\n          </Provider>\n        </div>\n      </div>\n      <div className=\"explication-text\">\n        <ExplanationText />\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter basename=\"/\">\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}